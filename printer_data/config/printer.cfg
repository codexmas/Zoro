[include mainsail.cfg]
[include macros.cfg]
[include ebb36_toolhead.cfg]

# This file contains common pin mappings for the BIGTREETECH Manta M5P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PD0/PD1)".

# See docs/Config_Reference.md for a description of parameters.

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_4000070018504D4D36343020-if00
# canbus_uuid: 419b84aca3a2

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


[force_move]
enable_force_move: True

[gcode_macro DEBUG_STEPPERS]
description: Set Kinematic position
gcode:
  G90
  SET_KINEMATIC_POSITION X=30
  SET_KINEMATIC_POSITION Y=30
  SET_KINEMATIC_POSITION Z=30

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_x]
step_pin: PC8
dir_pin: !PC9
enable_pin: !PA15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
#endstop_pin: ^PD3
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 20   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PD9
interpolate: False
run_current: 0.8
sense_resistor: 0.150
stealthchop_threshold: 0
diag_pin: ^!PD3
driver_SGTHRS: 255

##  A Stepper - Right
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_y]
step_pin: PA10
dir_pin: !PA14
enable_pin: !PA13
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
#endstop_pin: ^PD2
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 20  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD8
interpolate: False
run_current: 0.8
sense_resistor: 0.150
stealthchop_threshold: 0
diag_pin: ^!PD2
driver_SGTHRS: 255
 
#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_3
##  Endstop connected to DIAG_3
[stepper_z]
step_pin: PC6
dir_pin: !PC7
enable_pin: !PA9
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8    
microsteps: 32
endstop_pin: PC3
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.5
## All builds use same Max Z
position_max: 240
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PB10
interpolate: False
run_current: 0.6
sense_resistor: 0.150
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_5
[stepper_z1]
step_pin: PB0
dir_pin: !PB1
enable_pin: !PC4
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8  
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PA6
interpolate: False
run_current: 0.6
sense_resistor: 0.150
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PB12
dir_pin: !PB11
enable_pin: !PA8
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8  
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PB2
interpolate: False
run_current: 0.6
sense_resistor: 0.150
stealthchop_threshold: 0

# [extruder]
# step_pin: PB12
# dir_pin: !PB11
# enable_pin: !PA8
# microsteps: 16
# rotation_distance: 33.500
# nozzle_diameter: 0.400
# filament_diameter: 1.750
# heater_pin: PC5
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: PA1
# control: pid
# pid_Kp: 21.527
# pid_Ki: 1.063
# pid_Kd: 108.982
# min_temp: 0
# max_temp: 250

#sensor_type:MAX31865
#sensor_pin: PA4
#spi_bus: spi1
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2

#[filament_switch_sensor material_0]
#switch_pin: PC2

#[extruder1]
#step_pin: PB0
#dir_pin: PB1
#enable_pin: !PC4
#heater_pin: PA7
#sensor_pin: PA2
#...

[heater_bed]
heater_pin: PA7
sensor_type: Generic 3950
sensor_pin: PA0
control: watermark
min_temp: 0
max_temp: 120
max_power: 0.7
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   heater_pin may be set to. The value 1.0 allows the pin to be set
#   fully enabled for extended periods, while a value of 0.5 would
#   allow the pin to be enabled for no more than half the time. This
#   setting may be used to limit the total power output (over extended
#   periods) to the heater. The default is 1.0.

[fan]
pin: PA4

#[heater_fan fan1]
#pin: PA3

#[heater_fan SoC_fan]
#pin: CB1: gpio79
#pin: RPI: gpio26

#[safe_z_home]
#home_xy_position: 175, 175
#   Sets the x, y position used for z homing with beacon
#z_hop: 3
#   Retracts the z axis before x, y homing to avoid dragging the nozzle.

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_71D5DA764E4B333448202020FF0A2F29-if00
#   Path to the serial port for the beacon device. Typically has the form
#   /dev/serial/by-id/usb-Beacon_Beacon_...
#speed: 5.
#   Z probing dive speed.
#lift_speed: 5.
#   Z probing lift speed.
#backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
#x_offset: 0.
#   X offset of beacon from the nozzle.
#y_offset: 0.
#   Y offset of beacon from the nozzle.
#trigger_distance: 2.
#   Beacon trigger distance for homing.
#trigger_dive_threshold: 1.
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
#trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
#cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
#cal_floor: 0.2
#   Minimum z bound on sensor response measurement.
#cal_ceil: 5.
#   Maximum z bound on sensor response measurement.
#cal_speed: 1.
#   Speed while measuring response curve.
#cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
#default_model_name: default
#   Name of default beacon model to load.
#mesh_main_direction: y
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
#mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
#mesh_runs: 1
#   Number of passes to make during mesh scan.

# [probe]
# pin: ^can0:LIMIT_1
# x_offset: -29.8
# y_offset: -13.5
# z_offset: 2.202
# speed: 5
# samples: 3
# sample_retract_dist: 2
# lift_speed: 5.0
# samples_result: median
# samples_tolerance: 0.02
# samples_tolerance_retries: 5


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD5, EXP1_3=PB3, EXP1_5=PB5, EXP1_7=PB7, EXP1_9=<GND>,
    EXP1_2=PD4,  EXP1_4=PD6, EXP1_6=PB4, EXP1_8=PB6, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PB8, EXP2_5=PC10, EXP2_7=PC12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB9, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

#[neopixel my_neopixel1]
#pin: PC11

#[neopixel my_neopixel2]
#pin: PC14

#[adxl345]
#cs_pin: PC0
#spi_bus: spi2


#--------------------------------------------------------------------

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.0
initial_GREEN: 0.5
initial_BLUE: 1.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=0.0 GREEN=0.5 BLUE=1.0 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=0.0 GREEN=0.25 BLUE=1.0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=0.0 GREEN=0.75 BLUE=1.0 INDEX=3 

#--------------------------------------------------------------------

